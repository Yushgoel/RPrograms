print("hello")
my_name <- 9
install.packages("rmarkdown", dependencies=TRUE)
install.packages("backports", type="binary")
install.packages("digest", dependencies=TRUE)
install.packages("digest", dependencies=TRUE)
plot(cars)
# Chunk 1
summary(cars)
# Chunk 2
plot(cars)
install.packages("learnr")
---
title: "test2"
output: learnr::tutorial
---
rmarkdown::run("tutorial.Rmd")
knitr::opts_chunk$set(echo = TRUE)
inputPanel(
selectInput("n_breaks", label = "Number of bins:",
choices = c(10, 20, 35, 50), selected = 20),
sliderInput("bw_adjust", label = "Bandwidth adjustment:",
min = 0.2, max = 2, value = 1, step = 0.2)
)
plot(cars)
hello <- "how are you"
hello <- 9
hello <- 9
print(hello)
how ar eyou
bye <- hello - 9
hello <- "how are you"
hello <- 9
print(hello)
bye <- hello - 9
print(bye)
rm(bye)
rm(hello)
hello <- 9
print(hello)
library(tidyverse)
install.library(tidyverse)
install.packages(tidyverse)
install.packages("tidyverse")
!install.packages(tidyverse)
install.packages("highcharter")
install.packages('corrplot')
library(tidyverse)
library(highcharter)
library(corrplot)
load("~/Downloads/train.csv")
data = read_csv('../train.csv', col_types = cols())
data = read_csv('../train.csv', col_types = cols())
data = read_csv('../R/train.csv', col_types = cols())
by_cyl = data %>% group_by(SaleCondition)
a <- by_cyl %>% summarise(
SalePrice = mean(SalePrice)
)
highchart() %>%
hc_chart(type = "pie") %>%
hc_add_series_labels_values(labels = a$SaleCondition, values = a$SalePrice)
by_cyl = data %>% group_by(SaleCondition)
a <- by_cyl %>% summarise(
SalePrice = mean(SalePrice)
)
highchart() %>%
hc_chart(type = "pie") %>%
hc_add_series_labels_values(labels = a$SaleCondition, values = a$SalePrice)
data %>%
filter(!is.na(SaleCondition)) %>%
count(SaleCondition) %>%
hchart('treemap', hcaes(x = 'SaleCondition', value = 'n', color = 'n'))
data %>%
filter(!is.na(SaleCondition)) %>%
count(SaleCondition) %>%
hchart('treemap', hcaes(x = 'SaleCondition', value = 'n', color = 'n'))
hchart(density(data$SalePrice), type = "area", color = "#FF8B03", name = "Sale Price of House") %>% hc_title(title= "Distribution of House Sale Prices") %>% hc_add_theme(hc_theme_darkunica())
data%>%
count(Street)%>%
arrange(n)%>%
hchart(type = "bar", hcaes(x = Street, y = n))%>%
hc_add_theme(hc_theme_ffx())
hchart(data, "scatter", hcaes(x = LotArea, y = GrLivArea))
highchart() %>%
hc_chart(type = "column") %>%
hc_title(text = "Average Sale Price for Different Sale Conditions") %>%
hc_xAxis(categories = c(a$SaleCondition)) %>%
hc_add_series(data = c(a$SalePrice),
name = "Average Sale Price")
hchart(data$SaleCondition, colorByPoint = TRUE, name = "Count")
hchart(data$SalePrice, name = "SalePrice")
```{r}
```{r}
hchart(a, method=c('number'))
nums <- unlist(lapply(data, is.numeric))
a = cor(data[, nums], use="complete.obs")
hchart(a, method=c('number'))
nums <- unlist(lapply(data, is.numeric))
a = cor(data[, nums], use="complete.obs")
hchart(a, method=c('number'))
data  %>%
arrange(desc(SalePrice)) %>%
#select(one_of('heroes','youtube_ctr')) %>%
hchart('bubble',hcaes(x = LotArea, y = SalePrice, size = round(GrLivArea / 1000))) %>%
hc_add_theme(hc_theme_monokai())
data = read_csv('../R/train.csv', col_types = cols())
data = read_csv('../R/train.csv', col_types = cols())
data = read_csv('../R/train.csv', col_types = cols())
data = read_csv('../R/train.csv', col_types = cols())
installed.packages(flexdashboard)
installed.packages('flexdashboard')
install.packages("flexdashboard")
library(data.table)
library(flexdashboard)
library(highcharter)
valueBox(nrow(data), icon="fa-table", color="rgb(100, 200, 100)")
data = read_csv('../R/train.csv', col_types = cols())
data = read_csv('../R/train.csv', col_types = cols())
library(data.table)
library(flexdashboard)
library(highcharter)
valueBox(nrow(data), icon="fa-table", color="rgb(100, 200, 100)")
library(data.table)
library(flexdashboard)
library(highcharter)
data = fread('../R/train.csv')
library(data.table)
library(flexdashboard)
library(highcharter)
data = fread('../R/train.csv')
valueBox(nrow(data), icon="fa-table", color="rgb(100, 200, 100)")
library(data.table)
library(flexdashboard)
library(highcharter)
data = fread('../R/train.csv')
data = fread('../R/train.csv')
valueBox(nrow(data), icon="fa-table", color="rgb(100, 200, 100)")
valueBox(ncol(train) - 2, icon = "fa-table", color = "rgb(100,200,100)")
valueBox(ncol(data) - 2, icon = "fa-table", color = "rgb(100,200,100)")
library(flexdashboard)
library(data.table)
library(highcharter)
data <- fread('../R/train.csv')
valueBox(nrow(train), icon = "fa-table", color = "rgb(100,200,100)")
valueBox(nrow(data), icon = "fa-table", color = "rgb(100,200,100)")
valueBox(nrow(data), icon = "fa-table", color = "rgb(0,200,0)")
valueBox(nrow(data), icon = "fa-table", color = "rgb(100,200,100)")
library(flexdashboard)
library(data.table)
library(highcharter)
data <- fread('../R/train.csv')
valueBox(nrow(data), icon = "fa-table", color = "rgb(100,200,100)")
valueBox(ncol(train) - 2, icon = "fa-table", color = "rgb(100,200,100)")
valueBox(ncol(data) - 2, icon = "fa-table", color = "rgb(100,200,100)")
data$SalePrice
data %>%
filter(!is.na(SaleCondition)) %>%
count(SaleCondition) %>%
hchart('pie', hcaes(x = 'SaleCondition', value = 'n'))
data %>%
filter(!is.na(SaleCondition)) %>%
count(SaleCondition) %>%
hchart('pie', hcaes(x = 'SaleCondition', value = 'n'))
data %>%
filter(!is.na(SaleCondition)) %>%
count(SaleCondition) %>%
hchart('treemap', hcaes(x = 'SaleCondition', value = 'n', color = 'n'))
by_cyl = data %>% group_by(SaleCondition)
a <- by_cyl %>% summarise(
SalePrice = mean(SalePrice)
)
highchart() %>%
hc_chart(type = "pie") %>%
hc_add_series_labels_values(labels = a$SaleCondition, values = a$SalePrice)
require(highcharter)
highchart() %>%
hc_chart(type = "pie") %>%
hc_add_series_labels_values(labels = data$SaleCondition, values = 'n')
require(highcharter)
highchart() %>%
hc_chart(type = "pie") %>%
hc_add_series_labels_values(labels = data$SaleCondition, values = count(data@SaleCondition)
require(highcharter)
highchart() %>%
hc_chart(type = "pie") %>%
hc_add_series_labels_values(labels = data$SaleCondition, values = count(data@SaleCondition))
require(highcharter)
highchart() %>%
hc_chart(type = "pie") %>%
hc_add_series_labels_values(labels = data$SaleCondition, values = count(data@SaleCondition))
require(highcharter)
highchart() %>%
hc_chart(type = "pie") %>%
hc_add_series_labels_values(labels = data$SaleCondition, values = count(data$SaleCondition))
count(data$SaleCondition)
by_cyl = data %>% group_by(SaleCondition)
a <- by_cyl %>% summarise(
SalePrice = count(SaleCondition)
)
by_cyl = data %>% group_by(SaleCondition)
a <- by_cyl %>% summarise(
SalePrice = mean(SalePrice)
)
a
by_cyl = data %>% group_by(SaleCondition)
a <- by_cyl %>% summarise(
SalePrice = count(data)
)
a
aggregate.data.frame(data)
aggregate(data)
aggregate(data, by='SaleCondition')
aggregate(data, by='SaleCondition')
aggregate(data, by='SaleCondition')
aggregate(data, by='SaleCondition')
aggregate(data, by='SaleCondition')
aggregate(data, by='SaleCondition')
table(data$SaleCondition)
as.data.frame(table(data$SaleCondition))
c <- as.data.frame(table(data$SaleCondition))
c
highchart() %>%
hc_chart(type = "pie") %>%
hc_add_series_labels_values(labels = c$Var1, values = c$Freq)
library(tidyverse)
library(highcharter)
library(corrplot)
data = read_csv('../R/train.csv', col_types = cols())
by_cyl = data %>% group_by(SaleCondition)
a <- by_cyl %>% summarise(
SalePrice = mean(SalePrice)
)
highchart() %>%
hc_chart(type = "pie") %>%
hc_add_series_labels_values(labels = a$SaleCondition, values = a$SalePrice)
require(highcharter)
highchart() %>%
hc_chart(type = "pie") %>%
hc_add_series_labels_values(labels = data$SaleCondition, values = count(data$SaleCondition))
data %>%
filter(!is.na(SaleCondition)) %>%
count(SaleCondition) %>%
hchart('treemap', hcaes(x = 'SaleCondition', value = 'n', color = 'n'))
